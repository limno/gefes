Sample "{{sample_short_name}}"
==============================

General Information
-------------------
This sample has the code "{{sample_short_name}}" and is named "{{sample_long_name}}". It is part of the project code "{{project_short_name}}" ("{{project_long_name}}") along with {{project_other_samples}} other samples.

-------

Meta-data details
-----------------
The JSON file located online at:

> <{{json_url}}>

contains all the metadata associated with this sample. Here are the contents of this file:

    {{json_content}}

-------

Processing
----------
This report (and all the analysis) was generated using the ILLUMITAG project at:

> <{{project_url}}>

Version `{{project_version}}` of the pipeline was used. The exact git hash of the latest commit was:

    {{git_hash}}

also refereed to by its tag `{{git_tag}}`. This document was generated at `{{now}}`.

A brief overview of what happens to the data can be viewed online here:

> <https://github.com/limno/illumitag/blob/master/documentation/pipeline_outline.pdf?raw=true>

The results and all the files generated for this sample can be found on UPPMAX at:

    {{results_directory}}

-------

Raw data
--------
* The forward read file weighed *{{fwd_size}}* and contained *{{fwd_count}}* reads with an average PHRED quality of *{{fwd_qual}}*
* The reverse read file weighed *{{rev_size}}* and contained *{{rev_count}}* reads with an average PHRED quality of *{{rev_qual}}*

More information about the raw output of the sequencer for this sample can be found in the HTML report generated by the Illumina software here:

    {{illumina_report}}

The average quality per base can be seen in figure \ref{per_base_qual} and the average quality per sequence in figure \ref{per_seq_qual}.

{{per_base_qual}}

{{per_seq_qual}}

-------

Filtering
---------
Next, we filter the sequences based on several criteria. These many sequences are lost:

* Checking for the presence of both primers at their exact positions with at most {{mismatches_allowed}} mismatches allowed discards {{primer_discard}} sequences ({{primer_left}} left).
* Checking for the absence of undetermined "N" bases anywhere in the reads (expect in the primers) discards {{n_base_discard}} sequences ({{n_base_left}} left).
* Running a {{window_size}} base pair window over the sequences and checking that quality doesn't drop below {{window_threshold}} discards {{window_discard}} sequences ({{window_left}} left).
* Checking that no sequence is shorter than {{length_threshold}} base pairs discards {{length_discard}} sequences ({{length_left}} left).

This leaves us with {{percent_remaining}} of the original sequences. The next step in the pipeline is generating outputs that are compatible with "Qiime" and "Mothur" for those who are interested in that. We will also trim the primers on both ends of sequences now